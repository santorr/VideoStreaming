name: Build and Deploy Docker Image to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PROJECT_NAME: website
  PROJECT_DIR: ~/projects/website

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build -t ${{ env.PROJECT_NAME }} .

      - name: Export Docker image as tar
        run: docker save ${{ env.PROJECT_NAME }} -o ${{ env.PROJECT_NAME }}.tar

      - name: Clean old tar on VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: "${{ secrets.VPS_HOST }}"
          username: "${{ secrets.VPS_USER }}"
          key: "${{ secrets.VPS_SSH_KEY }}"
          port: "${{ secrets.VPS_PORT }}"
          script: |
            rm -rf ${{ env.PROJECT_DIR }}/${{ env.PROJECT_NAME }}.tar

      - name: Copy image to VPS
        uses: appleboy/scp-action@v0.1.4
        with:
          host: "${{ secrets.VPS_HOST }}"
          username: "${{ secrets.VPS_USER }}"
          key: "${{ secrets.VPS_SSH_KEY }}"
          port: "${{ secrets.VPS_PORT }}"
          source: "${{ env.PROJECT_NAME }}.tar"
          target: "${{ env.PROJECT_DIR }}/"

      - name: Load and run image on VPS
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: "${{ secrets.VPS_HOST }}"
          username: "${{ secrets.VPS_USER }}"
          key: "${{ secrets.VPS_SSH_KEY }}"
          port: "${{ secrets.VPS_PORT }}"
          script: |
            cd ${{ env.PROJECT_DIR }}
            docker load -i ${{ env.PROJECT_NAME }}.tar

            # Stop and remove any container using port 80
            for c in $(docker ps -q --filter "publish=80"); do
              docker stop $c && docker rm $c;
            done

            docker stop ${{ env.PROJECT_NAME }} || true
            docker rm ${{ env.PROJECT_NAME }} || true

            docker run -d --name ${{ env.PROJECT_NAME }} -p 80:80 \
              -v ${{ env.PROJECT_DIR }}/videos:/usr/local/apache2/htdocs/videos \
              ${{ env.PROJECT_NAME }}